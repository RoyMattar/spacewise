<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Register - SpaceWise</title>
  <script src="https://cdn.tailwindcss.com"></script>
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600&display=swap" rel="stylesheet">
  <link rel="icon" type="image/png" href="/favicon.png">
  <style>
    body {
      font-family: 'Inter', sans-serif;
    }
  </style>
</head>
<body class="bg-gray-100">
  <!-- Auth Navbar -->
  <%- include('partials/authNavbar') %>

  <!-- Main Content -->
  <main class="container mx-auto py-10 px-6">
    <div class="bg-white p-6 shadow-md rounded-lg max-w-sm mx-auto">
      <h3 class="text-xl font-semibold mb-4">Register</h3>

      <!-- Error message (Initially Hidden) -->
      <div id="error-message" class="text-red-600 text-sm mb-4 hidden"></div>

      <form id="register-form">
        <!-- Username Input -->
        <label for="username" class="block text-gray-600">Username</label>
        <input type="text" id="username" name="username" class="w-full px-4 py-2 mb-4 border border-gray-300 rounded" placeholder="Create a username" required>
        <!-- Password Input -->
        <label for="password" class="block text-gray-600">Password</label>
        <input type="password" id="password" name="password" class="w-full px-4 py-2 mb-4 border border-gray-300 rounded" placeholder="Create a password" required>
        <!-- Role Selection -->
        <label for="role" class="block text-gray-600 mb-2">Select Role:</label>
        <div class="flex items-center mb-4">
            <input type="radio" id="role-student" name="role" value="student" class="mr-2" required>
            <label for="role-student" class="text-gray-700">Student</label>
        </div>
        <div class="flex items-center mb-4">
            <input type="radio" id="role-admin" name="role" value="admin" class="mr-2">
            <label for="role-admin" class="text-gray-700">Admin</label>
        </div>

        <!-- Admin-specific Fields (Hidden by Default) -->
        <div id="admin-fields" class="hidden">
          <label for="institution-name" class="block text-gray-600">Institution Name</label>
          <input type="text" id="institution-name" name="institution_name" class="w-full px-4 py-2 mb-4 border border-gray-300 rounded" placeholder="Institution Name">

          <label for="institution-bio" class="block text-gray-600">Institution Bio</label>
          <textarea id="institution-bio" name="bio" class="w-full px-4 py-2 mb-4 border border-gray-300 rounded" placeholder="Short description"></textarea>

          <label for="opening-hours" class="block text-gray-600">Opening Hours</label>
          <input type="text" id="opening-hours" name="opening_hours" class="w-full px-4 py-2 mb-4 border border-gray-300 rounded" placeholder="e.g., Mon-Fri 9AM-5PM">
        </div>

        <!-- Submit Button -->
        <button type="submit" class="w-full px-4 py-2 text-sm text-white bg-black rounded hover:bg-gray-800">
          Register
        </button>
      </form>
    </div>
  </main>

  <script>
    // Toggle Admin Fields Based on Role Selection
    document.querySelectorAll('input[name="role"]').forEach(radio => {
      radio.addEventListener('change', function () {
        const adminFields = document.getElementById('admin-fields');
        adminFields.classList.toggle('hidden', this.value !== 'admin');
      });
    });

    document.getElementById('register-form').addEventListener('submit', async function (e) {
      e.preventDefault(); // Prevent default form submission

      const username = document.getElementById('username').value.trim();
      const password = document.getElementById('password').value.trim();
      const role = document.querySelector('input[name="role"]:checked')?.value;
      const errorMessage = document.getElementById('error-message');

      // Admin-specific fields
      const institution_name = document.getElementById('institution-name')?.value.trim();
      const bio = document.getElementById('institution-bio')?.value.trim();
      const opening_hours = document.getElementById('opening-hours')?.value.trim();

      // Clear previous error messages
      errorMessage.textContent = '';
      errorMessage.classList.add('hidden');

      // Basic validation
      if (!username || !password || !role) {
        errorMessage.textContent = 'Please fill in all fields.';
        errorMessage.classList.remove('hidden');
        return;
      }

      if (role === 'admin' && !institution_name) {
        errorMessage.textContent = 'Institution name is required for admin registration.';
        errorMessage.classList.remove('hidden');
        return;
      }

      // Disable button to prevent multiple submissions
      const registerButton = document.querySelector('button[type="submit"]');
      registerButton.disabled = true;
      registerButton.textContent = 'Registering...';

      try {
        const response = await fetch('/register', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({
            username,
            password,
            role,
            institution_name: role === 'admin' ? institution_name : null,
            bio: role === 'admin' ? bio : null,
            opening_hours: role === 'admin' ? opening_hours : null,
          }),
        });

        const result = await response.json();

        if (response.ok) {
          window.location.href = result.redirect; // Redirect on successful registration
        } else {
          errorMessage.textContent = result.error || 'Registration failed.';
          errorMessage.classList.remove('hidden');
        }
      } catch (error) {
        errorMessage.textContent = 'Something went wrong. Please try again later.';
        errorMessage.classList.remove('hidden');
      }

      // Re-enable button
      registerButton.disabled = false;
      registerButton.textContent = 'Register';
    });
  </script>
</body>
</html>
