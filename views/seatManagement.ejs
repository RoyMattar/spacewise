<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Seat Management - SpaceWise</title>
  <script src="https://cdn.tailwindcss.com"></script>
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600&display=swap" rel="stylesheet">
  <style>
    body {
      font-family: 'Inter', sans-serif;
    }
    .seat-list li {
      display: flex;
      justify-content: space-between;
      align-items: center;
      padding: 8px;
      background: #f9fafb;
      border: 1px solid #ddd;
      border-radius: 4px;
      margin-bottom: 6px;
    }
    .toggle-btn {
      padding: 4px 8px;
      border-radius: 4px;
      cursor: pointer;
    }
    .unavailable {
      background-color: #f87171;
      color: white;
    }
    .available {
      background-color: #34d399;
      color: white;
    }
  </style>
</head>
<body class="bg-gray-100">
  <!-- Navbar -->
  <header class="bg-white shadow-md">
    <div class="container mx-auto flex items-center justify-between py-4 px-6">
      <div class="flex items-center space-x-2">
        <a href="/home">
          <!-- Clickable Logo -->
          <span class="text-xl font-semibold">êåÇ SpaceWise</span>
        </a>
      </div>
    </div>
  </header>

  <!-- Main Content -->
  <main class="container mx-auto py-10 px-6">
    <h2 class="text-2xl font-semibold mb-6">Manage Space: <%= space.space_name %></h2>

    <div class="bg-white p-6 shadow-md rounded-lg">
      <!-- Layout Preview -->
      <h3 class="text-xl font-semibold mb-4">Preview Layout</h3>
      <div class="p-4 bg-gray-50 border rounded-md">
        <p class="text-gray-600 text-sm">Preview the space layout as seen by students.</p>
        <div class="mt-4 bg-gray-200 h-64 flex items-center justify-center">
          <% if (space.layout_image) { %>
            <img id="spacePreview" src="<%= space.layout_image %>" alt="Space Layout" class="w-full h-full object-contain">
          <% } else { %>
              <span id="previewPlaceholder" class="text-gray-500">No layout available.</span>
          <% } %>
        </div>
      </div>

      <!-- Upload/Edit Layout -->
      <h3 class="text-xl font-semibold mb-4">Upload/Edit Layout</h3>
      <label for="layoutUpload" class="block text-sm font-medium text-gray-700">Upload Layout Image</label>
      <input type="file" id="layoutUpload" name="layoutImage" class="mt-2 block w-full text-sm text-gray-700 bg-gray-50 border border-gray-300 rounded-md focus:outline-none focus:ring-purple-600 focus:border-purple-600">
      <button id="saveLayoutBtn" class="mt-4 px-4 py-2 text-sm text-white bg-purple-600 rounded hover:bg-purple-800">
        Save Layout
      </button>
      <button id="clearSeatsBtn" class="mt-4 ml-2 px-4 py-2 bg-yellow-600 text-white rounded hover:bg-yellow-800">
        Remove All Seats
      </button>

      <!-- Seat Management -->
      <h3 class="text-xl font-semibold mb-4">Seat Management</h3>
      <div class="mb-6">
        <!-- Seat Label Input -->
        <label for="seatLabel" class="block text-sm font-medium text-gray-700">Seat Label (e.g., A1, B2)</label>
        <input type="text" id="seatLabel" placeholder="Enter seat label" class="mt-2 block w-full px-3 py-2 bg-gray-50 border border-gray-300 rounded-md">
      
        <!-- Seat Type Dropdown -->
        <label for="seatType" class="block text-sm font-medium text-gray-700 mt-4">Seat Type</label>
        <select id="seatType" class="mt-2 block w-full px-3 py-2 bg-gray-50 border border-gray-300 rounded-md">
          <option value="chair">Chair</option>
          <option value="desk">Desk</option>
          <option value="sofa">Sofa</option>
        </select>
      
        <!-- Facilities Multi-Select -->
        <label class="block text-sm font-medium text-gray-700 mt-4">Seat Facilities</label>
        <div class="mt-2 flex flex-wrap">
          <label class="flex items-center mr-4">
            <input type="checkbox" name="facility" value="outlet" class="mr-2"> Outlet
          </label>
          <label class="flex items-center mr-4">
            <input type="checkbox" name="facility" value="lamp" class="mr-2"> Lamp
          </label>
          <label class="flex items-center">
            <input type="checkbox" name="facility" value="desk-light" class="mr-2"> Desk Light
          </label>
        </div>
      
        <!-- Add Seat Button -->
        <button id="addSeatBtn" class="mt-4 px-4 py-2 text-sm text-white bg-green-600 rounded hover:bg-green-800">
          Add Seat
        </button>
      </div>
      
      <!-- Seat List Preview -->
      <h3 class="text-xl font-semibold mb-4">Seat Preview</h3>
      <ul id="seatList" class="seat-list"></ul>

      <!-- Save and Discard Buttons -->
      <div class="mt-6 flex">
        <button id="saveChangesBtn" class="px-4 py-2 bg-blue-600 text-white rounded">Save</button>
        <button id="discardChangesBtn" class="ml-4 px-4 py-2 bg-red-600 text-white rounded">Discard</button>
      </div>
    </div>
  </main>

  <script>
    document.getElementById('layoutUpload').addEventListener('change', function (event) {
      const file = event.target.files[0];
      if (!file) return;

      const reader = new FileReader();
      reader.onload = function () {
        const previewImage = document.getElementById('spacePreview');
        const placeholder = document.getElementById('previewPlaceholder');

        if (previewImage) {
            previewImage.src = reader.result; // Show the selected image instantly
            previewImage.classList.remove('hidden');
        } else {
            const newImg = document.createElement("img");
            newImg.id = "spacePreview";
            newImg.src = reader.result;
            newImg.classList.add("w-full", "h-full", "object-contain");
            document.querySelector('.mt-4').innerHTML = '';
            document.querySelector('.mt-4').appendChild(newImg);
        }

        if (placeholder) {
            placeholder.classList.add('hidden'); // Hide placeholder text
        }
      };
      reader.readAsDataURL(file);
    });
  
    document.getElementById('saveLayoutBtn').addEventListener('click', async function () {
      const fileInput = document.getElementById('layoutUpload');
      const file = fileInput.files[0];

      if (!file) {
          alert('Please select a file to upload.');
          return;
      }

      const formData = new FormData();
      formData.append('layoutImage', file);

      try {
        const response = await fetch(window.location.pathname, {
            method: 'PATCH',
            body: formData
        });

        const result = await response.json();

        if (response.ok) {
          alert('Layout updated successfully!');

          // Update the preview with the new image path from the server
          const previewImage = document.getElementById('spacePreview');
          const placeholder = document.getElementById('previewPlaceholder');

          if (previewImage) {
            previewImage.src = result.imagePath;
            previewImage.classList.remove('hidden');
          } else {
            const newImg = document.createElement("img");
            newImg.id = "spacePreview";
            newImg.src = result.imagePath;
            newImg.classList.add("w-full", "h-full", "object-contain");
            document.querySelector('.mt-4').innerHTML = '';
            document.querySelector('.mt-4').appendChild(newImg);
          }

          if (placeholder) {
            placeholder.classList.add('hidden');
          }
        } else {
          alert('Error updating layout.');
        }
      } catch (error) {
        console.error('Upload error:', error);
      }
    });

    document.getElementById('addSeatBtn').addEventListener('click', function () {
      const seatLabel = document.getElementById('seatLabel').value.trim();
      const seatType = document.getElementById('seatType').value;
      const facilities = [...document.querySelectorAll('input[name="facility"]:checked')].map(f => f.value);
      const seatStatus = "available";  

      if (!seatLabel) {
          alert("Please enter a seat label (e.g., A1, B2).");
          return;
      }

      const seatList = document.getElementById('seatList');

      // Create list item
      const seatItem = document.createElement("li");
      seatItem.className = "p-2 bg-white border rounded-md mb-2";
      seatItem.innerHTML = `
        <span><strong>${seatLabel}</strong> - ${seatType} (${facilities.join(", ") || "No Facilities"})</span>
        <button class="toggleStatus available toggle-btn" data-status="${seatStatus}">Available</button>
        <button class="deleteSeat bg-red-500 text-white px-3 py-1 rounded">Delete</button>
      `;

      seatList.appendChild(seatItem);

      seatItem.querySelector(".toggleStatus").addEventListener("click", function () {
          this.classList.toggle("available");
          this.classList.toggle("unavailable");
          this.innerText = this.classList.contains("available") ? "Available" : "Unavailable";
      });

      seatItem.querySelector(".deleteSeat").addEventListener("click", function () {
          seatList.removeChild(seatItem);
      });

      // Clear input fields after adding
      document.getElementById('seatLabel').value = "";
      document.querySelectorAll('input[name="facility"]').forEach(cb => cb.checked = false);
    });

    document.getElementById('clearSeatsBtn').addEventListener('click', function () {
      if (confirm("Are you sure you want to remove all seats?")) {
          document.getElementById('seatList').innerHTML = "";
      }
    });

    document.getElementById('saveChangesBtn').addEventListener('click', async function () {
      alert("Seats saved successfully! (Simulated API call)");
    });
  </script>
</body>
</html>
